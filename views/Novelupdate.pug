extends layout

block content
  h1= title
  - let Novelid = toShow._id
  - let Novel_type = toShow.Novel_type
  - let Novelcost = toShow.cost
  - let Novelsize = toShow.size

  div.row(class='mb-2', style='background-color: yellow; padding: 10px;')
    div.mr-1(style='font-style: italic;') ID is
    div(style='font-style: italic;') #{Novelid}

  - let actionid = "/resource/Novels/" + Novelid

  form(id='NovelForm', action= actionid, method="PUT")
    div.form-group
      label.NovelAttr(for='Novel_type', style='font-style: italic;') Novel type
      input#Novel_type(type='text', name='Novel_type', value= Novel_type, style='background-color: yellow;')
    
    div.form-group
      label.NovelAttr(for='size', style='font-style: italic;') Novel size
      input#size(type='text', name='size', value= Novelsize, style='background-color: yellow;')
    
    div.form-group
      label.NovelAttr(for='cost', style='font-style: italic;') Novel cost
      input#cost(type='number', name='cost', value= Novelcost, style='background-color: yellow;')
    
    input(type="submit", style='background-color: yellow;')

  script.
    document.forms['NovelForm'].addEventListener('submit', (event) => {
      event.preventDefault();
      // TODO do something here to show the user that the form is being submitted
      fetch(event.target.action, {
        method: 'PUT',
        body: new URLSearchParams(new FormData(event.target)) // event.target is the form
      }).then((resp) => {
        return resp.json(); // or resp.text() or whatever the server sends
      }).then((body) => {
        alert("Update succeeded");
        // TODO handle body
      }).catch((error) => {
        // TODO handle error
        alert("Update failed " + error );
      });
    });